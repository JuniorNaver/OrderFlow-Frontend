import React, { useState } from 'react';
import '../style/RoleManage.css';

// ÏûÑÏãú Ïó≠Ìï† Îç∞Ïù¥ÌÑ∞
const DUMMY_ROLES = [
    { id: 1, position: 'Ï†êÏû•', BI: true, PO: true, PR: false, GR: true, STK: true, SD: true },
    { id: 2, position: 'Ï†êÏõê', BI: false, PO: false, PR: false, GR: false, STK: true, SD: true },
];

const RoleManage = () => {
    const [roles, setRoles] = useState(DUMMY_ROLES);

    // ‚≠êÔ∏è Ïó≠Ìï†(Í∂åÌïú) ÌÜ†Í∏Ä Ìï®Ïàò
    const handleToggleRole = (id, roleKey) => {
        setRoles(prevRoles =>
            prevRoles.map(role =>
                role.id === id ? { ...role, [roleKey]: !role[roleKey] } : role
            )
        );
    };

    return (
        <div className="role-manage-container">
            <h1>Ïó≠Ìï† Í¥ÄÎ¶¨</h1>
            
            {/* Ï†ÄÏû•/Ï∑®ÏÜå Î≤ÑÌäº Í∑∏Î£π */}
            <div className="button-group top-buttons">
                <button className="save-btn">Ï†ÄÏû•</button>
                <button className="cancel-btn">Ï∑®ÏÜå</button>
            </div>

            {/* Ïó≠Ìï† Î™©Î°ù ÌÖåÏù¥Î∏î */}
            <table className="role-table">
                <thead>
                    <tr>
                        <th><input type="checkbox" /></th>
                        <th>Î≤àÌò∏</th>
                        <th>Ïó≠Ìï†</th>
                        <th>Î∞úÏ£º(PO)</th>
                        <th>Ï°∞Îã¨(PR)</th>
                        <th>Ïû¨Í≥†Í¥ÄÎ¶¨(STK)</th>
                        <th>ÏòÅÏóÖ(SD)</th>
                        <th>BI</th>
                    </tr>
                </thead>
                <tbody>
                    {roles.map(role => (
                        <tr key={role.id}>
                            <td><input type="checkbox" /></td>
                            <td>{role.id}</td>
                            <td>{role.position}</td>
                            <td className="toggle-cell">
                            {/* ‚≠êÔ∏è ÌÜ†Í∏Ä Ïä§ÏúÑÏπò Íµ¨Ï°∞Î°ú Î≥ÄÍ≤Ω */}
                            <label className="switch">
                                <input
                                    type="checkbox"
                                    checked={role.PO} // PO Í∂åÌïú ÏÉÅÌÉú Î∞òÏòÅ
                                    onChange={() => handleToggleRole(role.id, 'PO')}
                                />
                                <span className="slider round"></span> {/* Ïä¨ÎùºÏù¥Îçî Î∞î Ïó≠Ìï† */}
                            </label>
                            </td>
                            <td className="toggle-cell">
                            <label className="switch">
                                <input
                                    type="checkbox"
                                    checked={role.PR} // PR Í∂åÌïú ÏÉÅÌÉú Î∞òÏòÅ
                                    onChange={() => handleToggleRole(role.id, 'PR')}
                                />
                            <span className="slider round"></span>
                            </label>
                            </td>
                            {/* üí° ÎÇòÎ®∏ÏßÄ Í∂åÌïú(STK, SD, BI)ÎèÑ ÎèôÏùºÌïòÍ≤å <label className="switch"> Íµ¨Ï°∞Î°ú Î≥ÄÍ≤ΩÌï¥Ïïº Ìï©ÎãàÎã§. */}
                            <td className="toggle-cell">
                            <label className="switch">
                                <input
                                    type="checkbox"
                                    checked={role.STK}
                                    onChange={() => handleToggleRole(role.id, 'STK')}
                                />
                                <span className="slider round"></span>
                            </label>
                            </td>
                            <td className="toggle-cell">
                            <label className="switch">
                                <input
                                    type="checkbox"
                                    checked={role.SD}
                                    onChange={() => handleToggleRole(role.id, 'SD')}
                                />
                                <span className="slider round"></span>
                            </label>
                            </td>
                            <td className="toggle-cell">
                            <label className="switch">
                            <input
                                type="checkbox"
                                checked={role.BI}
                                onChange={() => handleToggleRole(role.id, 'BI')}
                            />
                            <span className="slider round"></span>
                            </label>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>
        </div>
    );
};

export default RoleManage;